/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  NftStorageERC721,
  NftStorageERC721Interface,
} from "../../contracts/NftStorageERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_collectionAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "collectionAddress",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "depositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "unlockToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461007a57601f61039038819003918201601f19168301916001600160401b0383118484101761007f5780849260209460405283398101031261007a57516001600160a01b0381169081900361007a5760018060a01b03193381600054161760005560015416176001556040516102fa90816100968239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040908082526004908136101561001757600080fd5b600090813560e01c908163150b7a0214610203575080636215be77146101675780636aa003711461013e5780638da5cb5b146101125763dd2e0ac01461005c57600080fd5b3461010f57602036600319011261010f57546001600160a01b031633036100bf576020606492519162461bcd60e51b8352820152602060248201527f4f6e6c792076616c696461746f72732063616e20756e6c6f636b20746f6b656e6044820152fd5b6020608492519162461bcd60e51b8352820152602560248201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60448201526431ba34b7b760d91b6064820152fd5b80fd5b50823461013a578160031936011261013a57905490516001600160a01b039091168152602090f35b5080fd5b50823461013a578160031936011261013a5760015490516001600160a01b039091168152602090f35b50918291346101ff5760203660031901126101ff576001546001600160a01b0316803b156101fa5783906064845180968193632142170760e11b83523387840152306024840152863560448401525af180156101f0576101c5578380f35b67ffffffffffffffff83116101dd5750523880808380f35b634e487b7160e01b845260419052602483fd5b82513d86823e3d90fd5b505050fd5b5050fd5b8483853461013a57608036600319011261013a576001600160a01b038135818116036102a9576024359081160361013a5760643567ffffffffffffffff8082116102c057366023830112156102c05781830135928184116102ad57601f8401601f19908116603f01168701918211878310176102ad5750845281855236602483830101116102a957906020948160248794018483013701015251630a85bd0160e11b8152f35b8280fd5b634e487b7160e01b855260419052602484fd5b8380fdfea2646970667358221220bf7a479e604238f5868a408ce3ca147a2d7bdc2944ec1ecff0879a2427f404aa64736f6c63430008150033";

type NftStorageERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NftStorageERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NftStorageERC721__factory extends ContractFactory {
  constructor(...args: NftStorageERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _collectionAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_collectionAddress, overrides || {});
  }
  override deploy(
    _collectionAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_collectionAddress, overrides || {}) as Promise<
      NftStorageERC721 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NftStorageERC721__factory {
    return super.connect(runner) as NftStorageERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NftStorageERC721Interface {
    return new Interface(_abi) as NftStorageERC721Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NftStorageERC721 {
    return new Contract(address, _abi, runner) as unknown as NftStorageERC721;
  }
}
