import type {
  IBridgeConfig,
  IEvmChainConfig,
  IStakingConfig,
  TChain,
} from "./types";

export const bridgeTestChains = [
  {
    chain: "BSC",
    rpcURL: "https://bsc-testnet.publicnode.com",
    nativeCoinSymbol: "BNB",
    intialFund: "50000000000000000",
    contractAddress: "0xCa5c7090Fa1F3C0939E226ec827Ae140494d81F4",
    chainType: "evm",
    lastBlock: 40782489,
    decimals: 18,
    blockChunks: 1000,
  },
  {
    chain: "ETH",
    rpcURL: "https://ethereum-sepolia.publicnode.com",
    nativeCoinSymbol: "ETH",
    intialFund: "50000000000000000",
    contractAddress: "0xCa3563d84f0D62344B8467382623d780Bb58871f",
    chainType: "evm",
    lastBlock: 5999640,
    decimals: 18,
    blockChunks: 1000,
  },
  {
    chain: "MATIC",
    rpcURL: "https://rpc-amoy.polygon.technology/",
    nativeCoinSymbol: "MATIC",
    intialFund: "50000000000000000",
    contractAddress: "0x820c0b504fe85b43E3c43D2EA24cb764ad78d52e",
    chainType: "evm",
    lastBlock: 7896204,
    decimals: 18,
    blockChunks: 1000,
  },
  {
    chain: "MULTIVERSX",
    nativeCoinSymbol: "EGLD",
    intialFund: "50000000000000000",
    contractAddress:
      "erd1qqqqqqqqqqqqqpgqju4xpyzqhlpth298zyd23sx9ge628qhssjrspl5sye",
    chainType: "multiversX",
    elasticSearchURL: "https://devnet-index.multiversx.com",
    gatewayURL: "https://devnet-gateway.multiversx.com",
    lastBlock: 2875313,
    chainID: "D",
    decimals: 18,
  },
  {
    chain: "TON",
    rpcURL: "https://testnet.toncenter.com/api/v2/jsonRPC",
    nativeCoinSymbol: "TON",
    intialFund: "500000000",
    contractAddress: "kQA44UbG1OwwD3E-oScnetLJwWasDFuTSJb6hOHq8KvrudxM",
    chainType: "ton",
    lastBlock: 21947462000001,
    decimals: 9,
  },
  {
    chain: "SECRET",
    rpcURL: "https://api.pulsar.scrttestnet.com",
    nativeCoinSymbol: "USCRT",
    intialFund: "50000",
    contractAddress: "secret1elt03d87zqvuwv8567fmnpjpyh4rt9tgyutqx3",
    chainType: "scrt",
    chainId: "pulsar-3",
    lastBlock: 4818367,
    decimals: 6,
    blockChunks: 1000,
  },
  {
    chain: "TEZOS",
    rpcURL: "https://ghostnet.smartpy.io",
    restApiURL: "https://api.ghostnet.tzkt.io",
    contractAddress: "KT18pSSB3f9H3xtHzBfMCjTdPja82nqpAm66",
    intialFund: "50000",
    lastBlock: 6232010,
    nativeCoinSymbol: "XTZ",
    chainType: "tezos",
    decimals: 6,
    blockChunks: 1000,
  },
  {
    chain: "HEDERA",
    rpcURL: "https://testnet.hashio.io/api",
    nativeCoinSymbol: "HBAR",
    intialFund: "50000000000000000",
    contractAddress: "0x473D25d2f26d8288c15EBB608A11cb067a74A692",
    chainType: "hedera",
    lastBlock: 7095475,
    royaltyInfoProxyAddress: "0x870f7b68c0a64733dcF4D95E5C06aa34387B98BF",
    decimals: 18,
    blockChunks: 1000,
  },
  {
    chainType: "cosmwasm",
    blockChunks: 100000,
    chain: "TERRA",
    chainId: "pisco-1",
    contractAddress:
      "terra1jdek24uwru97s8c48smzx035tmw55yqxzrc2sy7flepr980rx7hsrnyl03",
    decimals: 6,
    intialFund: "100000",
    lastBlock: 11034978,
    nativeCoinSymbol: "uluna",
    rpcURL: "https://terra-testnet-rpc.polkachu.com/",
    walletPrefix: "terra",
  },
] as const satisfies TChain[];

export const storageTestnetConfig: IEvmChainConfig = {
  chain: "OP",
  rpcURL: "https://public.stackup.sh/api/v1/node/optimism-sepolia",
  nativeCoinSymbol: "OP",
  intialFund: "10000000000000000",
  contractAddress: "0x8411EeadD374bDE549F61a166FFBeFca592bC60a",
  chainType: "evm",
  lastBlock: 17608314,
  decimals: 18,
  blockChunks: 1000,
};

export const stakingTestChain: IStakingConfig = {
  chain: "BSC",
  rpcURL: "https://bsc-testnet.publicnode.com",
  coinSymbol: "ERC",
  nativeCoinSymbol: "BNB",
  chainType: "evm",
  coinAddress: "0x9739a54004300e74532c1147b82791193d82B093",
  contractAddress: "0x6e372D7fe53F4B7Baa3543Deffe6B87833846D37",
  intialFund: "100000000000000000",
  lastBlock: 38733903,
  decimals: 18,
  blockChunks: 1000,
};

export const testnetBridgeConfig: IBridgeConfig = {
  bridgeChains: bridgeTestChains,
  storageConfig: storageTestnetConfig,
  stakingConfig: stakingTestChain,
};

export const prodBridgeConfig: IBridgeConfig = {
  bridgeChains: [],
  storageConfig: {
    chain: "OP",
    rpcURL: "https://mainnet.optimism.io",
    nativeCoinSymbol: "OP",
    intialFund: "500000000000000000",
    contractAddress: "0xBridgeStorageAddress",
    chainType: "evm",
    lastBlock: 21321,
    decimals: 18,
    blockChunks: 1000,
  },
  stakingConfig: {
    chain: "BSC",
    rpcURL: "https://bsc-testnet.publicnode.com",
    coinSymbol: "XPNET",
    nativeCoinSymbol: "BNB",
    chainType: "evm",
    coinAddress: "0x61f00f09bA58F1613b05aE4f9AF9039fd8F959d0",
    contractAddress: "0x5a38d6534214ec8Ce0598c37773738F4F7E9FC66",
    intialFund: "100000000000000000000",
    lastBlock: 34255418,
    decimals: 18,
    blockChunks: 1000,
  },
};

export type TSupportedChainsConfig = (typeof bridgeTestChains)[number];
export type TSupportedChains = TSupportedChainsConfig["chain"];
export type TSupportedChainTypes = TSupportedChainsConfig["chainType"];
