/* Autogenerated file. Do not edit manually. */
/* eslint-disable */
import {
    Contract,
    ContractFactory,
    ContractTransactionResponse,
    Interface,
} from 'ethers';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from './../common';
import type {
    RoyaltyInfoProxy,
    RoyaltyInfoProxyInterface,
} from './RoyaltyInfoProxy';

const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
            {
                indexed: false,
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        name: 'CallResponseEvent',
        type: 'event',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'token',
                type: 'address',
            },
            {
                internalType: 'bytes',
                name: 'encodedFunctionSelector',
                type: 'bytes',
            },
        ],
        name: 'redirectForToken',
        outputs: [
            {
                internalType: 'int256',
                name: 'responseCode',
                type: 'int256',
            },
            {
                internalType: 'bytes',
                name: 'response',
                type: 'bytes',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'token',
                type: 'address',
            },
            {
                internalType: 'int64',
                name: 'serialNumber',
                type: 'int64',
            },
        ],
        name: 'royaltyInfo',
        outputs: [
            {
                internalType: 'int256',
                name: '',
                type: 'int256',
            },
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: 'string',
                                        name: 'name',
                                        type: 'string',
                                    },
                                    {
                                        internalType: 'string',
                                        name: 'symbol',
                                        type: 'string',
                                    },
                                    {
                                        internalType: 'address',
                                        name: 'treasury',
                                        type: 'address',
                                    },
                                    {
                                        internalType: 'string',
                                        name: 'memo',
                                        type: 'string',
                                    },
                                    {
                                        internalType: 'bool',
                                        name: 'tokenSupplyType',
                                        type: 'bool',
                                    },
                                    {
                                        internalType: 'int64',
                                        name: 'maxSupply',
                                        type: 'int64',
                                    },
                                    {
                                        internalType: 'bool',
                                        name: 'freezeDefault',
                                        type: 'bool',
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: 'uint256',
                                                name: 'keyType',
                                                type: 'uint256',
                                            },
                                            {
                                                components: [
                                                    {
                                                        internalType: 'bool',
                                                        name: 'inheritAccountKey',
                                                        type: 'bool',
                                                    },
                                                    {
                                                        internalType: 'address',
                                                        name: 'contractId',
                                                        type: 'address',
                                                    },
                                                    {
                                                        internalType: 'bytes',
                                                        name: 'ed25519',
                                                        type: 'bytes',
                                                    },
                                                    {
                                                        internalType: 'bytes',
                                                        name: 'ECDSA_secp256k1',
                                                        type: 'bytes',
                                                    },
                                                    {
                                                        internalType: 'address',
                                                        name: 'delegatableContractId',
                                                        type: 'address',
                                                    },
                                                ],
                                                internalType:
                                                    'struct IHederaTokenService.KeyValue',
                                                name: 'key',
                                                type: 'tuple',
                                            },
                                        ],
                                        internalType:
                                            'struct IHederaTokenService.TokenKey[]',
                                        name: 'tokenKeys',
                                        type: 'tuple[]',
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: 'int64',
                                                name: 'second',
                                                type: 'int64',
                                            },
                                            {
                                                internalType: 'address',
                                                name: 'autoRenewAccount',
                                                type: 'address',
                                            },
                                            {
                                                internalType: 'int64',
                                                name: 'autoRenewPeriod',
                                                type: 'int64',
                                            },
                                        ],
                                        internalType:
                                            'struct IHederaTokenService.Expiry',
                                        name: 'expiry',
                                        type: 'tuple',
                                    },
                                ],
                                internalType:
                                    'struct IHederaTokenService.HederaToken',
                                name: 'token',
                                type: 'tuple',
                            },
                            {
                                internalType: 'int64',
                                name: 'totalSupply',
                                type: 'int64',
                            },
                            {
                                internalType: 'bool',
                                name: 'deleted',
                                type: 'bool',
                            },
                            {
                                internalType: 'bool',
                                name: 'defaultKycStatus',
                                type: 'bool',
                            },
                            {
                                internalType: 'bool',
                                name: 'pauseStatus',
                                type: 'bool',
                            },
                            {
                                components: [
                                    {
                                        internalType: 'int64',
                                        name: 'amount',
                                        type: 'int64',
                                    },
                                    {
                                        internalType: 'address',
                                        name: 'tokenId',
                                        type: 'address',
                                    },
                                    {
                                        internalType: 'bool',
                                        name: 'useHbarsForPayment',
                                        type: 'bool',
                                    },
                                    {
                                        internalType: 'bool',
                                        name: 'useCurrentTokenForPayment',
                                        type: 'bool',
                                    },
                                    {
                                        internalType: 'address',
                                        name: 'feeCollector',
                                        type: 'address',
                                    },
                                ],
                                internalType:
                                    'struct IHederaTokenService.FixedFee[]',
                                name: 'fixedFees',
                                type: 'tuple[]',
                            },
                            {
                                components: [
                                    {
                                        internalType: 'int64',
                                        name: 'numerator',
                                        type: 'int64',
                                    },
                                    {
                                        internalType: 'int64',
                                        name: 'denominator',
                                        type: 'int64',
                                    },
                                    {
                                        internalType: 'int64',
                                        name: 'minimumAmount',
                                        type: 'int64',
                                    },
                                    {
                                        internalType: 'int64',
                                        name: 'maximumAmount',
                                        type: 'int64',
                                    },
                                    {
                                        internalType: 'bool',
                                        name: 'netOfTransfers',
                                        type: 'bool',
                                    },
                                    {
                                        internalType: 'address',
                                        name: 'feeCollector',
                                        type: 'address',
                                    },
                                ],
                                internalType:
                                    'struct IHederaTokenService.FractionalFee[]',
                                name: 'fractionalFees',
                                type: 'tuple[]',
                            },
                            {
                                components: [
                                    {
                                        internalType: 'int64',
                                        name: 'numerator',
                                        type: 'int64',
                                    },
                                    {
                                        internalType: 'int64',
                                        name: 'denominator',
                                        type: 'int64',
                                    },
                                    {
                                        internalType: 'int64',
                                        name: 'amount',
                                        type: 'int64',
                                    },
                                    {
                                        internalType: 'address',
                                        name: 'tokenId',
                                        type: 'address',
                                    },
                                    {
                                        internalType: 'bool',
                                        name: 'useHbarsForPayment',
                                        type: 'bool',
                                    },
                                    {
                                        internalType: 'address',
                                        name: 'feeCollector',
                                        type: 'address',
                                    },
                                ],
                                internalType:
                                    'struct IHederaTokenService.RoyaltyFee[]',
                                name: 'royaltyFees',
                                type: 'tuple[]',
                            },
                            {
                                internalType: 'string',
                                name: 'ledgerId',
                                type: 'string',
                            },
                        ],
                        internalType: 'struct IHederaTokenService.TokenInfo',
                        name: 'tokenInfo',
                        type: 'tuple',
                    },
                    {
                        internalType: 'int64',
                        name: 'serialNumber',
                        type: 'int64',
                    },
                    {
                        internalType: 'address',
                        name: 'ownerId',
                        type: 'address',
                    },
                    {
                        internalType: 'int64',
                        name: 'creationTime',
                        type: 'int64',
                    },
                    {
                        internalType: 'bytes',
                        name: 'metadata',
                        type: 'bytes',
                    },
                    {
                        internalType: 'address',
                        name: 'spenderId',
                        type: 'address',
                    },
                ],
                internalType: 'struct IHederaTokenService.NonFungibleTokenInfo',
                name: '',
                type: 'tuple',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'token',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'from',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'to',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'transferFrom',
        outputs: [
            {
                internalType: 'int64',
                name: 'responseCode',
                type: 'int64',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'token',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'from',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'to',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'serialNumber',
                type: 'uint256',
            },
        ],
        name: 'transferFromNFT',
        outputs: [
            {
                internalType: 'int64',
                name: 'responseCode',
                type: 'int64',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
] as const;

const _bytecode =
    '';

type RoyaltyInfoProxyConstructorParams =
    | [signer?: Signer]
    | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
    xs: RoyaltyInfoProxyConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoyaltyInfoProxy__factory extends ContractFactory {
    constructor(...args: RoyaltyInfoProxyConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
    }

    override getDeployTransaction(
        overrides?: NonPayableOverrides & { from?: string },
    ): Promise<ContractDeployTransaction> {
        return super.getDeployTransaction(overrides || {});
    }
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
        return super.deploy(overrides || {}) as Promise<
            RoyaltyInfoProxy & {
                deploymentTransaction(): ContractTransactionResponse;
            }
        >;
    }
    override connect(runner: ContractRunner | null): RoyaltyInfoProxy__factory {
        return super.connect(runner) as RoyaltyInfoProxy__factory;
    }

    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): RoyaltyInfoProxyInterface {
        return new Interface(_abi) as RoyaltyInfoProxyInterface;
    }
    static connect(
        address: string,
        runner?: ContractRunner | null,
    ): RoyaltyInfoProxy {
        return new Contract(
            address,
            _abi,
            runner,
        ) as unknown as RoyaltyInfoProxy;
    }
}
