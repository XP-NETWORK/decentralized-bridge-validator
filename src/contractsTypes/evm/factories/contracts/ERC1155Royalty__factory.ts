/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ERC1155Royalty,
  ERC1155RoyaltyInterface,
} from "../../contracts/ERC1155Royalty";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC1155InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idsLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "valuesLength",
        type: "uint256",
      },
    ],
    name: "ERC1155InvalidArrayLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC1155InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC1155InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC1155MissingApprovalForAll",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "royalty",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "royaltyReceiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "newTokenURI",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608034620001a9576001600160401b03906200187790601f38839003908101601f191682019084821183831017620001935780839160409586948552833981010312620001a9576200005f60206200005783620001ae565b9201620001ae565b82519360208501908111858210176200019357835260008094526002546001908181811c9116801562000188575b60208210146200017457601f81116200012a575b505060028490556001600160a01b0391821680156200011257600380546001600160a01b0319808216841790925594519590948416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3169060075416176007556116b39081620001c48239f35b8351631e4fbdf760e01b815260048101869052602490fd5b60028652601f0160051c7f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace908101905b818110620001695750620000a1565b86815582016200015a565b634e487b7160e01b86526022600452602486fd5b90607f16906200008d565b634e487b7160e01b600052604160045260246000fd5b600080fd5b51906001600160a01b0382168203620001a95756fe6080604052600436101561001257600080fd5b60003560e01c8062fdd58e1461010657806301ffc9a7146101015780630e89341c146100fc578063162094c4146100f75780632a55205a146100f25780632eb2c2d6146100ed5780634e1273f4146100e8578063715018a6146100e35780638da5cb5b146100de578063a22cb465146100d9578063a86c7b24146100d4578063e78cea92146100cf578063e985e9c5146100ca578063f242432a146100c55763f2fde38b146100c057600080fd5b610c7d565b610b78565b610b1b565b610af2565b61094e565b610891565b610868565b610807565b61074d565b6105df565b610528565b610410565b610287565b6101c5565b610166565b600435906001600160a01b038216820361012157565b600080fd5b602435906001600160a01b038216820361012157565b608435906001600160a01b038216820361012157565b35906001600160a01b038216820361012157565b346101215760403660031901126101215760206101aa61018461010b565b6024356000526000835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b6001600160e01b031981160361012157565b346101215760203660031901126101215760206004356101e4816101b3565b63ffffffff60e01b16636cdb3d1360e11b8114908115610222575b8115610211575b506040519015158152f35b6301ffc9a760e01b14905038610206565b6303a24d0760e21b811491506101ff565b919082519283825260005b84811061025f575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161023e565b906020610284928181520190610233565b90565b346101215760208060031936011261012157600090600435825260068152604082209060405191838154906102bb82611525565b8086529260019280841690811561033057506001146102f5575b6102f1866102e5818a038261038b565b60405191829182610273565b0390f35b9080949650528483205b82841061031d57505050816102f1936102e5928201019338806102d5565b80548585018701529285019281016102ff565b60ff19168787015250505050151560051b82010191506102e5816102f138806102d5565b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff82111761038657604052565b610354565b90601f8019910116810190811067ffffffffffffffff82111761038657604052565b67ffffffffffffffff811161038657601f01601f191660200190565b81601f82011215610121578035906103e0826103ad565b926103ee604051948561038b565b8284526020838301011161012157816000926020809301838601378301015290565b346101215760403660031901126101215767ffffffffffffffff602435818111610121576104429036906004016103c9565b9061044b610d0b565b600090600435825260209060068252604083209184519182116103865761047c826104768554611525565b8561155f565b80601f83116001146104bd5750819084956104ad9495926104b2575b50508160011b916000199060031b1c19161790565b905580f35b015190503880610498565b90601f198316956104d385600052602060002090565b9286905b888210610510575050836001959697106104f7575b505050811b01905580f35b015160001960f88460031b161c191690553880806104ec565b806001859682949686015181550195019301906104d7565b34610121576040366003190112610121576004356000526004602052604060018060a01b038160002054166005602052816000205482519182526020820152f35b67ffffffffffffffff81116103865760051b60200190565b9080601f8301121561012157602090823561059b81610569565b936105a9604051958661038b565b818552838086019260051b820101928311610121578301905b8282106105d0575050505090565b813581529083019083016105c2565b346101215760a0366003190112610121576105f861010b565b610600610126565b906044359167ffffffffffffffff908184116101215761062560049436908601610581565b906064358381116101215761063d9036908701610581565b926084359081116101215761065590369087016103c9565b936001600160a01b038082169033821415806106e4575b6106b75783161561069f5715610688576106869550610fcf565b005b604051626a0d4560e21b8152600081880152602490fd5b604051632bfa23e760e11b8152600081890152602490fd5b6040805163711bec9160e11b815233818b019081526001600160a01b038616602082015290918291010390fd5b50600082815260016020908152604080832033845290915290205460ff161561066c565b90815180825260208080930193019160005b828110610728575050505090565b83518552938101939281019260010161071a565b906020610284928181520190610708565b346101215760403660031901126101215760043567ffffffffffffffff808211610121573660238301121561012157816004013561078a81610569565b92610798604051948561038b565b81845260209160248386019160051b8301019136831161012157602401905b8282106107f05785602435868111610121576102f1916107de6107e4923690600401610581565b90610d8b565b6040519182918261073c565b8380916107fc84610152565b8152019101906107b7565b346101215760008060031936011261086557610821610d0b565b600380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b34610121576000366003190112610121576003546040516001600160a01b039091168152602090f35b34610121576040366003190112610121576108aa61010b565b602435801515808203610121576001600160a01b038316928315610936573360009081526001602090815260408083206001600160a01b039094168352929052209060ff801983541691161790557f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160405180610931339482919091602081019215159052565b0390a3005b60405162ced3e160e81b815260006004820152602490fd5b346101215760c03660031901126101215761096761010b565b602435906064359061097761013c565b9260a43567ffffffffffffffff8111610121576109989036906004016103c9565b6007549093906001600160a01b039081163303610abf576127108211610a8757604051906109c58261036a565b60008252841615610a6e5761068695610a11610a4492610a6996610a0b604435889160405192600184526020840152604083019160018352606084015260808301604052565b91610e4f565b610a25846000526004602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b610a58826000526005602052604060002090565b556000526006602052604060002090565b6115b3565b604051632bfa23e760e11b815260006004820152602490fd5b60405162461bcd60e51b815260206004820152601060248201526f0a4def2c2d8e8f240e8dede40d0d2ced60831b6044820152606490fd5b60405162461bcd60e51b815260206004820152600b60248201526a4e6f74206272696467652160a81b6044820152606490fd5b34610121576000366003190112610121576007546040516001600160a01b039091168152602090f35b3461012157604036600319011261012157602060ff610b6c610b3b61010b565b610b43610126565b6001600160a01b0391821660009081526001865260408082209290931681526020919091522090565b54166040519015158152f35b346101215760a036600319011261012157610b9161010b565b610b99610126565b60843567ffffffffffffffff811161012157610bb99036906004016103c9565b906001600160a01b03838116903382141580610c59575b610c3257821615610a6e5715610c1a5761068692610c126064356044359160405192600184526020840152604083019160018352606084015260808301604052565b929091610fcf565b604051626a0d4560e21b815260006004820152602490fd5b60405163711bec9160e11b81523360048201526001600160a01b0386166024820152604490fd5b50600082815260016020908152604080832033845290915290205460ff1615610bd0565b3461012157602036600319011261012157610c9661010b565b610c9e610d0b565b6001600160a01b03908116908115610cf257600354826bffffffffffffffffffffffff60a01b821617600355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b6003546001600160a01b03163303610d1f57565b60405163118cdaa760e01b8152336004820152602490fd5b634e487b7160e01b600052601160045260246000fd5b6000198114610d5c5760010190565b610d37565b8051821015610d755760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b91909180518351808203610e2d575050805190610dc0610daa83610569565b92610db8604051948561038b565b808452610569565b60209190601f1901368484013760005b8151811015610e2557600581901b8281018401519087018401516000908152602081815260408083206001600160a01b0390941683529290522054610e209190610e1a8287610d61565b52610d4d565b610dd0565b509193505050565b604051635b05999160e01b815260048101919091526024810191909152604490fd5b908051835190818103610e2d57505060005b8151811015610ee457600581901b8281016020908101519186010151610e9b929185906001600160a01b038216610ea0575b505050610d4d565b610e61565b610eda91610ebb610ed2926000526000602052604060002090565b9060018060a01b0316600052602052604060002090565b9182546111cd565b9055388481610e93565b50805191939291600103610f86576020818101518382015160408051928352928201526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b6001600160a01b038416610f50575b50505050565b8051600103610f775790602080610f6e9593015191015191336112a8565b38808080610f4a565b610f8193336114b9565b610f6e565b6040516001600160a01b0385169060009033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb9080610fc78888836111da565b0390a4610f3b565b949190918151845190818103610e2d57505060005b82518110156110d757600581901b83810160209081015191870101516001600160a01b03929186908a8516611050575b61102694821661102b57505050610d4d565b610fe4565b61104691610ebb610ed2926000526000602052604060002090565b9055388581610e93565b919293905061106d8a610ebb846000526000602052604060002090565b548381106110a05791879184611026969594036110988d610ebb856000526000602052604060002090565b559450611014565b6040516303dee4c560e01b81526001600160a01b038c16600482015260248101919091526044810184905260648101839052608490fd5b509491939290936001855114600014611182576020858101518382015160408051928352928201526001600160a01b03838116929086169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b6001600160a01b03811661114b575b5050505050565b84516001036111715760208061116796015192015192336113a2565b3880808080611144565b61117d949192336114ee565b611167565b6040516001600160a01b03828116919085169033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb90806111c5888c836111da565b0390a4611135565b91908201809211610d5c57565b90916111f161028493604084526040840190610708565b916020818403910152610708565b908160209103126101215751610284816101b3565b909260a0926102849594600180861b0316835260006020840152604083015260608201528160808201520190610233565b919261028495949160a094600180871b038092168552166020840152604083015260608201528160808201520190610233565b3d156112a3573d90611289826103ad565b91611297604051938461038b565b82523d6000602084013e565b606090565b9293919093843b6112ba575050505050565b6020916112dd604051948593849363f23a6e6160e01b9889865260048601611214565b038160006001600160a01b0388165af160009181611372575b506113355782611304611278565b805191908261132e57604051632bfa23e760e11b81526001600160a01b0383166004820152602490fd5b9050602001fd5b6001600160e01b0319160361134f57503880808080611144565b604051632bfa23e760e11b81526001600160a01b03919091166004820152602490fd5b61139491925060203d811161139b575b61138c818361038b565b8101906111ff565b90386112f6565b503d611382565b939290949194853b6113b7575b505050505050565b6113da602093604051958694859463f23a6e6160e01b998a875260048701611245565b038160006001600160a01b0388165af16000918161141c575b506114015782611304611278565b6001600160e01b0319160361134f57503880808080806113af565b61143591925060203d811161139b5761138c818361038b565b90386113f3565b9261146b61028495936114799360018060a01b031686526000602087015260a0604087015260a0860190610708565b908482036060860152610708565b916080818403910152610233565b9390610284959361146b916114799460018060a01b03809216885216602087015260a0604087015260a0860190610708565b9293919093843b6114cb575050505050565b6020916112dd604051948593849363bc197c8160e01b988986526004860161143c565b939290949194853b61150257505050505050565b6113da602093604051958694859463bc197c8160e01b998a875260048701611487565b90600182811c92168015611555575b602083101461153f57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611534565b90601f811161156d57505050565b600091825260208220906020601f850160051c830194106115a9575b601f0160051c01915b82811061159e57505050565b818155600101611592565b9092508290611589565b919091825167ffffffffffffffff8111610386576115db816115d58454611525565b8461155f565b602080601f83116001146116125750819061160e9394956000926104b25750508160011b916000199060031b1c19161790565b9055565b90601f1983169561162885600052602060002090565b926000905b8882106116655750508360019596971061164c575b505050811b019055565b015160001960f88460031b161c19169055388080611642565b8060018596829496860151815501950193019061162d56fea2646970667358221220542d587550b0bd31b02aada015ce1efd47871282862d1b41d5e077bb884cea1064736f6c63430008150033";

type ERC1155RoyaltyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155RoyaltyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Royalty__factory extends ContractFactory {
  constructor(...args: ERC1155RoyaltyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    _bridge: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, _bridge, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    _bridge: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, _bridge, overrides || {}) as Promise<
      ERC1155Royalty & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC1155Royalty__factory {
    return super.connect(runner) as ERC1155Royalty__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155RoyaltyInterface {
    return new Interface(_abi) as ERC1155RoyaltyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC1155Royalty {
    return new Contract(address, _abi, runner) as unknown as ERC1155Royalty;
  }
}
