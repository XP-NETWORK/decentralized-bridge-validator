/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ERC721Royalty,
  ERC721RoyaltyInterface,
} from "../../contracts/ERC721Royalty";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "royalty",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "royalityReciever",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234620003c45762001586803803806200001d81620003c9565b9283398101608082820312620003c45781516001600160401b039290838111620003c457826200004f918301620003ef565b6020928383015190858211620003c4576200006c918401620003ef565b93620000896060620000816040860162000461565b940162000461565b94825190828211620003ae576000958654926001958685811c95168015620003a3575b838610146200038f578190601f958681116200033c575b508390868311600114620002d8578a92620002cc575b5050600019600383901b1c191690861b1787555b8151938411620002b85784548581811c91168015620002ad575b828210146200029957908184869594931162000242575b5080928411600114620001da57508692620001ce575b5050600019600383901b1c191690821b1790555b6001600160a01b03908116928315620001b557600780546001600160a01b03198082168717909255604051959194908416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a31690600a541617600a5561110f9081620004778239f35b604051631e4fbdf760e01b815260048101849052602490fd5b01519050388062000134565b9190859450601f1984168589528389209389905b8282106200022857505084116200020e575b505050811b01905562000148565b015160001960f88460031b161c1916905538808062000200565b8484015186558897909501949384019390810190620001ee565b90919293508588528188208480870160051c8201928488106200028f575b9187968992969594930160051c01915b828110620002805750506200011e565b8a815587965088910162000270565b9250819262000260565b634e487b7160e01b88526022600452602488fd5b90607f169062000107565b634e487b7160e01b87526041600452602487fd5b015190503880620000d9565b8a8052848b208994509190601f1984168c5b878282106200032557505084116200030b575b505050811b018755620000ed565b015160001960f88460031b161c19169055388080620002fd565b8385015186558c97909501949384019301620002ea565b909150898052838a208680850160051c82019286861062000385575b918a91869594930160051c01915b82811062000376575050620000c3565b8c81558594508a910162000366565b9250819262000358565b634e487b7160e01b89526022600452602489fd5b94607f1694620000ac565b634e487b7160e01b600052604160045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620003ae57604052565b919080601f84011215620003c45782516001600160401b038111620003ae5760209062000425601f8201601f19168301620003c9565b92818452828287010111620003c45760005b8181106200044d57508260009394955001015290565b858101830151848201840152820162000437565b51906001600160a01b0382168203620003c45756fe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a714610b745750806306fdde0314610ac4578063081812fc14610a89578063095ea7b3146109ad57806323b872dd146109955780632a55205a1461095157806342842e0e146109285780634bd297fd146105f25780636352211e146105c157806370a082311461056c578063715018a61461050f5780638da5cb5b146104e657806395d89b41146103fb578063a22cb4651461035e578063b88d4fde146102f6578063c87b56dd14610201578063e78cea92146101d8578063e985e9c5146101865763f2fde38b146100f457600080fd5b346101825760203660031901126101825761010d610c3a565b90610116610d47565b6001600160a01b0391821692831561016c575050600754826bffffffffffffffffffffffff60a01b821617600755167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5050346101d457806003193601126101d45760ff816020936101a6610c3a565b6101ae610c55565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b5050346101d457816003193601126101d457600a5490516001600160a01b039091168152602090f35b50903461018257602091826003193601126102f257356102208161109e565b5083526006825280832092815180948290805461023c81610d73565b918285526001918883821691826000146102cb57505060011461028d575b50505061028993929161026e910386610cd2565b815161027981610ca0565b5251928284938452830190610bfa565b0390f35b8552868520879350859291905b8284106102b3575050508201018161026e61028961025a565b8054848b01860152899550889490930192810161029a565b60ff19168782015293151560051b8601909301935084925061026e9150610289905061025a565b8380fd5b8382346101d45760803660031901126101d457610311610c3a565b610319610c55565b9060643567ffffffffffffffff811161035a573660238201121561035a576103579381602461034d93369301359101610d10565b9160443591610f4f565b80f35b8480fd5b509034610182578060031936011261018257610378610c3a565b906024359182151580930361035a576001600160a01b03169283156103e65750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b836024925191630b61174360e31b8352820152fd5b8284346104e357806003193601126104e357815191828260019384549461042186610d73565b918285526020968783821691826000146104bc575050600114610461575b5050506102899291610452910385610cd2565b51928284938452830190610bfa565b91908693508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8284106104a4575050508201018161045261028961043f565b8054848a01860152889550879490930192810161048b565b60ff19168782015293151560051b860190930193508492506104529150610289905061043f565b80fd5b5050346101d457816003193601126101d45760075490516001600160a01b039091168152602090f35b83346104e357806003193601126104e357610528610d47565b600780546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5091346104e35760203660031901126104e3576001600160a01b0361058f610c3a565b169283156105ac5750806020938392526003845220549051908152f35b91516322718ad960e21b815291820152602490fd5b5091346104e35760203660031901126104e357506105e16020923561109e565b90516001600160a01b039091168152f35b5082346104e35760a03660031901126104e35761060d610c3a565b602493909260443591906001600160a01b0390606435828116918835918390036109245767ffffffffffffffff6084358181116109205736602382011215610920576106619036908c818601359101610d10565b9885600a541633036108f05761271088116108bb5785169485156108a55788999a847fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef98999a528885888d60209b8c96600288528583205416918215159586610872575b8482526003895260028183209960019a8b81540190558784525281206bffffffffffffffffffffffff60a01b9d8e82541617905580a461085e57848b5260068852888b20938c5193841161084d57505061071f8354610d73565b601f8111610807575b50869a601f83116001146107a35782918b9c839260099b9c9d94610798575b50501b916000199060031b1c19161790555b7ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7848751838152a1875260088352848720918254161790555282205580f35b015192508d80610747565b838b52878b20601f1984169c92939290918c8e5b81106107f157508360099b9c9d9e106107d8575b505050811b019055610759565b015160001960f88460031b161c191690558b80806107cb565b81830151845592850192918a01918a018e6107b7565b838b52878b20601f840160051c810191898510610843575b601f0160051c019082905b828110610838575050610728565b8c815501829061082a565b909150819061081f565b634e487b7160e01b8c52604190528afd5b88516339e3563760e11b81528085018c9052fd5b600086815260046020526040902080546001600160a01b03191690558382526003895280822080546000190190556106c5565b8651633250574960e11b81528084018a90528b90fd5b865162461bcd60e51b81526020818501526010818d01526f0a4def2c2d8e8f240e8dede40d0d2ced60831b6044820152606490fd5b865162461bcd60e51b8152602081850152600b818d01526a4e6f74206272696467652160a81b6044820152606490fd5b8880fd5b8680fd5b5050346101d4576103579061093c36610c6b565b9192519261094984610ca0565b858452610f4f565b508290346101d457826003193601126101d457358152600860209081528282205460098252918390205492516001600160a01b039092168252810191909152604090f35b83346104e3576103576109a736610c6b565b91610dad565b5090346101825780600319360112610182576109c7610c3a565b916024356109d48161109e565b33151580610a76575b80610a4d575b610a37576001600160a01b039485169482918691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258880a48452602052822080546001600160a01b031916909117905580f35b835163a9fbf51f60e01b81523381850152602490fd5b506001600160a01b03811686526005602090815284872033885290528386205460ff16156109e3565b506001600160a01b0381163314156109dd565b503461018257602036600319011261018257918260209335610aaa8161109e565b50825283528190205490516001600160a01b039091168152f35b8284346104e357806003193601126104e35781519182828354610ae681610d73565b908184526020956001918783821691826000146104bc575050600114610b19575050506102899291610452910385610cd2565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410610b5c575050508201018161045261028961043f565b8054848a018601528895508794909301928101610b43565b92505034610182576020366003190112610182573563ffffffff60e01b81168091036101825760209250632483248360e11b8114908115610bb7575b5015158152f35b6380ac58cd60e01b811491508115610be9575b8115610bd8575b5038610bb0565b6301ffc9a760e01b14905038610bd1565b635b5e139f60e01b81149150610bca565b919082519283825260005b848110610c26575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610c05565b600435906001600160a01b0382168203610c5057565b600080fd5b602435906001600160a01b0382168203610c5057565b6060906003190112610c50576001600160a01b03906004358281168103610c5057916024359081168103610c50579060443590565b6020810190811067ffffffffffffffff821117610cbc57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610cbc57604052565b67ffffffffffffffff8111610cbc57601f01601f191660200190565b929192610d1c82610cf4565b91610d2a6040519384610cd2565b829481845281830111610c50578281602093846000960137010152565b6007546001600160a01b03163303610d5b57565b60405163118cdaa760e01b8152336004820152602490fd5b90600182811c92168015610da3575b6020831014610d8d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610d82565b6001600160a01b039182169290918315610f3657600092828452826020956002875260409684888820541696879133151580610e9d575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9284610e6a575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a41692838303610e495750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b600087815260046020526040902080546001600160a01b0319169055848352600381528b83208054600019019055610e10565b91939450915080610ef5575b15610eb957859291879138610de4565b878688610ed6576024915190637e27328960e01b82526004820152fd5b905163177e802f60e01b81523360048201526024810191909152604490fd5b503387148015610f1a575b80610ea95750858252600481523385898420541614610ea9565b5086825260058152878220338352815260ff8883205416610f00565b604051633250574960e11b815260006004820152602490fd5b610f5a838383610dad565b813b610f67575b50505050565b604051630a85bd0160e11b8082523360048301526001600160a01b03928316602483015260448201949094526080606482015260209592909116939092908390610fb5906084830190610bfa565b039285816000958187895af184918161105e575b50611029575050503d600014611021573d610fe381610cf4565b90610ff16040519283610cd2565b81528091843d92013e5b8051928361101c57604051633250574960e11b815260048101849052602490fd5b019050fd5b506060610ffb565b919450915063ffffffff60e01b1603611046575038808080610f61565b60249060405190633250574960e11b82526004820152fd5b9091508681813d8311611097575b6110768183610cd2565b8101031261035a57516001600160e01b03198116810361035a579038610fc9565b503d61106c565b6000818152600260205260409020546001600160a01b03169081156110c1575090565b60249060405190637e27328960e01b82526004820152fdfea2646970667358221220cc771eff001d337d51e83e9ac3260dac9db307b81547aa3e31f27ebc573bda3964736f6c63430008150033";

type ERC721RoyaltyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721RoyaltyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Royalty__factory extends ContractFactory {
  constructor(...args: ERC721RoyaltyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    _owner: AddressLike,
    _bridge: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      _owner,
      _bridge,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    _owner: AddressLike,
    _bridge: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name,
      symbol,
      _owner,
      _bridge,
      overrides || {}
    ) as Promise<
      ERC721Royalty & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC721Royalty__factory {
    return super.connect(runner) as ERC721Royalty__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721RoyaltyInterface {
    return new Interface(_abi) as ERC721RoyaltyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC721Royalty {
    return new Contract(address, _abi, runner) as unknown as ERC721Royalty;
  }
}
