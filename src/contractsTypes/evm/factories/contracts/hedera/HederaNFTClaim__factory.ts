/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  HederaNFTClaim,
  HederaNFTClaimInterface,
} from "../../../contracts/hedera/HederaNFTClaim";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "int64",
        name: "serial",
        type: "int64",
      },
    ],
    name: "ClaimCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "int64",
        name: "serial",
        type: "int64",
      },
    ],
    name: "ClaimRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "int64",
        name: "serial",
        type: "int64",
      },
    ],
    name: "addClaimRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "data",
        type: "uint256",
      },
    ],
    name: "decodeHts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int64",
        name: "",
        type: "int64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "int64",
        name: "serialNum",
        type: "int64",
      },
    ],
    name: "getClaimRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getClaimableNfts",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461007a5733156100645760008054336001600160a01b03198216811783556040519290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361063590816100808239f35b631e4fbdf760e01b815260006004820152602490fd5b600080fdfe604060808152600436101561001357600080fd5b600090813560e01c806303b570aa146103155780630b5d6cab146102225780630e44263a146101ea57806313b87c7314610178578063715018a61461011b5780638da5cb5b146100f45763f2fde38b1461006c57600080fd5b346100f05760203660031901126100f0576100856103d1565b61008d61042b565b6001600160a01b039081169182156100d9575082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b815260048101849052602490fd5b5080fd5b50346100f057816003193601126100f057905490516001600160a01b039091168152602090f35b823461017557806003193601126101755761013461042b565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50346100f0576101c29061018b366103ec565b93909261019661042b565b60018060a01b0380931692838752600160205281872094169384875260205285209360070b809461058c565b507f44b4992efa0f4a2ef0ab6c12e382a8912e85b95be1d0c1ef675f3ec8eb4c072f8480a480f35b50903461017557602036600319011261017557506004356bffffffffffffffffffffffff8251918060601c83521660070b6020820152f35b50346100f057806003193601126100f05761023b6103d1565b6001600160a01b036024358181169290839003610311571683526001926020918483528382209082528252828120918351918183818654918281520190819684528284209089855b8281106102fc5750505050849003601f01601f1916840195905067ffffffffffffffff8611848710176102e85792869284878096528186019282875251809352850195925b8281106102d55785870386f35b83518752958101959281019284016102c8565b634e487b7160e01b82526041600452602482fd5b83548552879590940193928101928101610283565b8480fd5b50346100f057610324366103ec565b90919261032f61042b565b60018060a01b0380941693848652600160205281862093169283865260205261036581862067ffffffffffffffff841690610485565b15610396575060070b917fb07fa4a51e7b16a069203e783265a3ef2a613ec877f5c502ffd9694079204ac18480a480f35b5162461bcd60e51b815260206004820152601560248201527410d85b9b9bdd0818db185a5b481d1a1a5cc81b999d605a1b6044820152606490fd5b600435906001600160a01b03821682036103e757565b600080fd5b60609060031901126103e7576001600160a01b039060043582811681036103e7579160243590811681036103e757906044358060070b81036103e75790565b6000546001600160a01b0316330361043f57565b60405163118cdaa760e01b8152336004820152602490fd5b805482101561046f5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b9060018201906000928184528260205260408420549081151560001461058557600019918083018181116105715782549084820191821161055d57818103610511575b505050805480156104fd578201916104e08383610457565b909182549160031b1b191690555582526020526040812055600190565b634e487b7160e01b86526031600452602486fd5b6105486105216105319386610457565b90549060031b1c92839286610457565b819391549060031b91821b91600019901b19161790565b905586528460205260408620553880806104c8565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b5050505090565b919060018301600090828252806020526040822054156000146105f957845494680100000000000000008610156105e557836105d5610531886001604098999a01855584610457565b9055549382526020522055600190565b634e487b7160e01b83526041600452602483fd5b5092505056fea26469706673582212206ec8a81e8078331f614a8245f7c579957e95b58ed05fcceeab8d3c055f96602764736f6c63430008150033";

type HederaNFTClaimConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HederaNFTClaimConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HederaNFTClaim__factory extends ContractFactory {
  constructor(...args: HederaNFTClaimConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      HederaNFTClaim & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): HederaNFTClaim__factory {
    return super.connect(runner) as HederaNFTClaim__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HederaNFTClaimInterface {
    return new Interface(_abi) as HederaNFTClaimInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): HederaNFTClaim {
    return new Contract(address, _abi, runner) as unknown as HederaNFTClaim;
  }
}
