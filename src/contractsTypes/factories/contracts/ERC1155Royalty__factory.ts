/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ERC1155Royalty,
  ERC1155RoyaltyInterface,
} from "../../contracts/ERC1155Royalty";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC1155InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idsLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "valuesLength",
        type: "uint256",
      },
    ],
    name: "ERC1155InvalidArrayLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC1155InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC1155InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC1155MissingApprovalForAll",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "royalty",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "royaltyReceiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "newTokenURI",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200018d576001600160401b0390601f620017a538819003918201601f19168301918483118484101762000177578084926020946040528339810103126200018d57516001600160a01b0391828216918290036200018d57604051906020820190811182821017620001775760405260008091526002546001908181811c911680156200016c575b60208210146200015857601f81116200010e575b5050806002558115620000f657600380546001600160a01b0319811684179091556040519316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36116129081620001938239f35b60249060405190631e4fbdf760e01b82526004820152fd5b60028352601f0160051c7f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace908101905b8181106200014d57506200009e565b83815582016200013e565b634e487b7160e01b83526022600452602483fd5b90607f16906200008a565b634e487b7160e01b600052604160045260246000fd5b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8062fdd58e146100f657806301ffc9a7146100f15780630e89341c146100ec578063162094c4146100e75780632a55205a146100e25780632eb2c2d6146100dd5780634e1273f4146100d8578063715018a6146100d35780638da5cb5b146100ce578063a22cb465146100c9578063a86c7b24146100c4578063e985e9c5146100bf578063f242432a146100ba5763f2fde38b146100b557600080fd5b610bca565b610ae8565b610a97565b61094e565b61089d565b610874565b610800565b610747565b6105d8565b610502565b6103eb565b610265565b6101a3565b610156565b600435906001600160a01b038216820361011157565b600080fd5b602435906001600160a01b038216820361011157565b608435906001600160a01b038216820361011157565b35906001600160a01b038216820361011157565b346101115760403660031901126101115760206101886101746100fb565b602435600052600083526040600020610c7e565b54604051908152f35b6001600160e01b031981160361011157565b346101115760203660031901126101115760206004356101c281610191565b63ffffffff60e01b16636cdb3d1360e11b8114908115610200575b81156101ef575b506040519015158152f35b6301ffc9a760e01b149050386101e4565b6303a24d0760e21b811491506101dd565b919082519283825260005b84811061023d575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161021c565b906020610262928181520190610211565b90565b3461011157602080600319360112610111576000906004358252600681526040822090604051918381549061029982611485565b8086529260019280841690811561030e57506001146102d3575b6102cf866102c3818a0382610368565b60405191829182610251565b0390f35b9080949650528483205b8284106102fb57505050816102cf936102c3928201019338806102b3565b80548585018701529285019281016102dd565b60ff19168787015250505050151560051b82010191506102c3816102cf38806102b3565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b0382111761036357604052565b610332565b90601f801991011681019081106001600160401b0382111761036357604052565b6001600160401b03811161036357601f01601f191660200190565b81601f82011215610111578035906103bb82610389565b926103c96040519485610368565b8284526020838301011161011157816000926020809301838601378301015290565b34610111576040366003190112610111576001600160401b036024358181116101115761041c9036906004016103a4565b90610425610c52565b6000906004358252602090600682526040832091845191821161036357610456826104508554611485565b856114bf565b80601f831160011461049757508190849561048794959261048c575b50508160011b916000199060031b1c19161790565b905580f35b015190503880610472565b90601f198316956104ad85600052602060002090565b9286905b8882106104ea575050836001959697106104d1575b505050811b01905580f35b015160001960f88460031b161c191690553880806104c6565b806001859682949686015181550195019301906104b1565b3461011157604036600319011261011157602435600435600052600460205260018060a01b036040600020541660056020526040600020549182810292818404149015171561055e576127106040928351928352046020820152f35b610caf565b6001600160401b0381116103635760051b60200190565b9080601f8301121561011157602090823561059481610563565b936105a26040519586610368565b818552838086019260051b820101928311610111578301905b8282106105c9575050505090565b813581529083019083016105bb565b346101115760a0366003190112610111576105f16100fb565b6105f9610116565b90604435916001600160401b03908184116101115761061d6004943690860161057a565b9060643583811161011157610635903690870161057a565b926084359081116101115761064d90369087016103a4565b936001600160a01b038082169033821415806106e0575b6106af5783161561069757156106805761067e9550610f16565b005b604051626a0d4560e21b8152600081880152602490fd5b604051632bfa23e760e11b8152600081890152602490fd5b6040805163711bec9160e11b815233818b019081526001600160a01b038616602082015290918291010390fd5b0390fd5b5081600052600160205260ff6106fa336040600020610c7e565b541615610664565b90815180825260208080930193019160005b828110610722575050505090565b835185529381019392810192600101610714565b906020610262928181520190610702565b34610111576040366003190112610111576004356001600160401b03808211610111573660238301121561011157816004013561078381610563565b926107916040519485610368565b81845260209160248386019160051b8301019136831161011157602401905b8282106107e95785602435868111610111576102cf916107d76107dd92369060040161057a565b90610cfe565b60405191829182610736565b8380916107f584610142565b8152019101906107b0565b346101115760008060031936011261085e5761081a610c52565b600380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b6001600160a01b03909116815260200190565b34610111576000366003190112610111576003546040516001600160a01b039091168152602090f35b34610111576040366003190112610111576108b66100fb565b602435801515808203610111576001600160a01b038316928315610936576108eb903360005260016020526040600020610c7e565b9060ff801983541691161790557f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160405180610931339482919091602081019215159052565b0390a3005b60405162ced3e160e81b815260006004820152602490fd5b346101115760c0366003190112610111576109676100fb565b602435906064359061097761012c565b9260a4356001600160401b038111610111576109979036906004016103a4565b926109a0610c52565b6127108111610a5f576040516109b581610348565b600081526001600160a01b03841615610a465761067e956109e9610a1c92610a41966109e360443588611460565b91610da8565b6109fd846000526004602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b610a30826000526005602052604060002090565b556000526006602052604060002090565b611513565b604051632bfa23e760e11b815260006004820152602490fd5b60405162461bcd60e51b815260206004820152601060248201526f0a4def2c2d8e8f240e8dede40d0d2ced60831b6044820152606490fd5b3461011157604036600319011261011157602060ff610adc610ab76100fb565b610abf610116565b6001600160a01b0390911660009081526001855260409020610c7e565b54166040519015158152f35b346101115760a036600319011261011157610b016100fb565b610b09610116565b6084356001600160401b03811161011157610b289036906004016103a4565b906001600160a01b03838116903382141580610ba8575b610b8157821615610a465715610b695761067e92610b61606435604435611460565b929091610f16565b604051626a0d4560e21b815260006004820152602490fd5b60405163711bec9160e11b81523360048201526001600160a01b0386166024820152604490fd5b5081600052600160205260ff610bc2336040600020610c7e565b541615610b3f565b3461011157602036600319011261011157610be36100fb565b610beb610c52565b6001600160a01b03908116908115610c3957600380546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b6003546001600160a01b03163303610c6657565b60405163118cdaa760e01b8152336004820152602490fd5b9060018060a01b0316600052602052604060002090565b610cab9160005260006020526040600020610c7e565b5490565b634e487b7160e01b600052601160045260246000fd5b600019811461055e5760010190565b8051821015610ce85760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b91909180518351808203610d86575050805190610d33610d1d83610563565b92610d2b6040519485610368565b808452610563565b60209190601f1901368484013760005b8151811015610d7e5780610d69610d799260051b85808287010151918a01015190610c95565b610d738287610cd4565b52610cc5565b610d43565b509193505050565b604051635b05999160e01b815260048101919091526024810191909152604490fd5b908051835190818103610d8657505060005b8151811015610e2b57600581901b8281016020908101519186010151610df4929185906001600160a01b038216610df9575b505050610cc5565b610dba565b610e2191610e14610e19926000526000602052604060002090565b610c7e565b918254611114565b9055388481610dec565b50805191939291600103610ecd576020818101518382015160408051928352928201526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b6001600160a01b038416610e97575b50505050565b8051600103610ebe5790602080610eb59593015191015191336111ef565b38808080610e91565b610ec893336113f4565b610eb5565b6040516001600160a01b0385169060009033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb9080610f0e888883611121565b0390a4610e82565b949190918151845190818103610d8657505060005b825181101561101e57600581901b83810160209081015191870101516001600160a01b03929186908a8516610f97575b610f6d948216610f7257505050610cc5565b610f2b565b610f8d91610e14610e19926000526000602052604060002090565b9055388581610dec565b9192939050610fb48a610e14846000526000602052604060002090565b54838110610fe75791879184610f6d96959403610fdf8d610e14856000526000602052604060002090565b559450610f5b565b6040516303dee4c560e01b81526001600160a01b038c16600482015260248101919091526044810184905260648101839052608490fd5b5094919392909360018551146000146110c9576020858101518382015160408051928352928201526001600160a01b03838116929086169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b6001600160a01b038116611092575b5050505050565b84516001036110b8576020806110ae96015192015192336112dd565b388080808061108b565b6110c494919233611429565b6110ae565b6040516001600160a01b03828116919085169033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb908061110c888c83611121565b0390a461107c565b9190820180921161055e57565b909161113861026293604084526040840190610702565b916020818403910152610702565b90816020910312610111575161026281610191565b909260a0926102629594600180861b0316835260006020840152604083015260608201528160808201520190610211565b919261026295949160a094600180871b038092168552166020840152604083015260608201528160808201520190610211565b3d156111ea573d906111d082610389565b916111de6040519384610368565b82523d6000602084013e565b606090565b9293919093843b611201575050505050565b602091611224604051948593849363f23a6e6160e01b988986526004860161115b565b038160006001600160a01b0388165af1600091816112ad575b50611276578261124b6111bf565b805191908261126f57604051632bfa23e760e11b8152806106dc8460048301610861565b9050602001fd5b6001600160e01b031916036112905750388080808061108b565b604051632bfa23e760e11b81529081906106dc9060048301610861565b6112cf91925060203d81116112d6575b6112c78183610368565b810190611146565b903861123d565b503d6112bd565b939290949194853b6112f2575b505050505050565b611315602093604051958694859463f23a6e6160e01b998a87526004870161118c565b038160006001600160a01b0388165af160009181611357575b5061133c578261124b6111bf565b6001600160e01b0319160361129057503880808080806112ea565b61137091925060203d81116112d6576112c78183610368565b903861132e565b926113a661026295936113b49360018060a01b031686526000602087015260a0604087015260a0860190610702565b908482036060860152610702565b916080818403910152610211565b939061026295936113a6916113b49460018060a01b03809216885216602087015260a0604087015260a0860190610702565b9293919093843b611406575050505050565b602091611224604051948593849363bc197c8160e01b9889865260048601611377565b939290949194853b61143d57505050505050565b611315602093604051958694859463bc197c8160e01b998a8752600487016113c2565b9160405192600184526020840152604083019160018352606084015260808301604052565b90600182811c921680156114b5575b602083101461149f57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611494565b90601f81116114cd57505050565b600091825260208220906020601f850160051c83019410611509575b601f0160051c01915b8281106114fe57505050565b8181556001016114f2565b90925082906114e9565b91909182516001600160401b0381116103635761153a816115348454611485565b846114bf565b602080601f83116001146115715750819061156d93949560009261048c5750508160011b916000199060031b1c19161790565b9055565b90601f1983169561158785600052602060002090565b926000905b8882106115c4575050836001959697106115ab575b505050811b019055565b015160001960f88460031b161c191690553880806115a1565b8060018596829496860151815501950193019061158c56fea26469706673582212203c66328a8064877f54d957f31c2617b4c332ae1a884fea9d5f61dd1c71821d9c64736f6c63430008150033";

type ERC1155RoyaltyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155RoyaltyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Royalty__factory extends ContractFactory {
  constructor(...args: ERC1155RoyaltyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(owner, overrides || {});
  }
  override deploy(
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner, overrides || {}) as Promise<
      ERC1155Royalty & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC1155Royalty__factory {
    return super.connect(runner) as ERC1155Royalty__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155RoyaltyInterface {
    return new Interface(_abi) as ERC1155RoyaltyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC1155Royalty {
    return new Contract(address, _abi, runner) as unknown as ERC1155Royalty;
  }
}
