/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  NFTStorageDeployer,
  NFTStorageDeployerInterface,
} from "../../contracts/NFTStorageDeployer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collectionAddress",
        type: "address",
      },
    ],
    name: "deployNFT1155Storage",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collectionAddress",
        type: "address",
      },
    ],
    name: "deployNFT721Storage",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610c14908161001c8239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c806311d5db80146101ab57806313af40351461012d5780638da5cb5b14610101576399a7ce6d1461004d57600080fd5b346100fd5760203660031901126100fd576001600160a01b0390803582811681036100f9578285541690610082823314610226565b84519261059f8085019185831067ffffffffffffffff8411176100e65750918493916100c79361026986396001600160a01b0391821681529116602082015260400190565b039084f09182156100dd57602093505191168152f35b513d84823e3d90fd5b634e487b7160e01b895260419052602488fd5b8480fd5b8280fd5b505034610129578160031936011261012957905490516001600160a01b039091168152602090f35b5080fd5b5090346100fd5760203660031901126100fd576001600160a01b038235818116939192908490036100f95784549283166101735750506001600160a01b03191617815580f35b906020606492519162461bcd60e51b835282015260126024820152714f776e657220616c7265616479207365742160701b6044820152fd5b50346100fd5760203660031901126100fd576001600160a01b0390803582811681036100f95782855416906101e1823314610226565b8451926103d78085019185831067ffffffffffffffff8411176100e65750918493916100c79361080886396001600160a01b0391821681529116602082015260400190565b1561022d57565b60405162461bcd60e51b815260206004820152601360248201527213db9b1e481bdddb995c8818d85b8818d85b1b606a1b6044820152606490fdfe60803461008b57601f61059f38819003918201601f19168301916001600160401b0383118484101761009057808492604094855283398101031261008b576020610048826100a6565b916001600160a01b0391829161005e91016100a6565b169160018060a01b031992836000541617600055169060015416176001556040516104e490816100bb8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361008b5756fe608060408181526004908136101561001657600080fd5b600092833560e01c90816301ffc9a7146102e1575080636aa00371146102b85780638da5cb5b14610290578381639d2d04d1146101d257508063bc197c8114610148578063f23a6e61146100f05763fead48171461007357600080fd5b346100ec5760603660031901126100ec576001600160a01b0390604435828116036100e7576100aa60209260649554163314610454565b5162461bcd60e51b815291820152602060248201527f4f6e6c792076616c696461746f72732063616e20756e6c6f636b20746f6b656e6044820152fd5b600080fd5b8280fd5b5082346101455760a03660031901126101455761010b610335565b5061011461034b565b50608435906001600160401b0382116101455750602092610137913691016103fe565b505163f23a6e6160e01b8152f35b80fd5b5082346101455760a036600319011261014557610163610335565b5061016c61034b565b506001600160401b03906044358281116101ce5761018d9036908601610398565b506064358281116101ce576101a59036908601610398565b5060843591821161014557506020926101c0913691016103fe565b505163bc197c8160e01b8152f35b5080fd5b9290503461028c578160031936011261028c5782546001600160a01b03906101fd9082163314610454565b60015416803b1561028757839060c4845180968193637921219560e11b8352338784015230602484015286356044840152602435606484015260a060848401528160a48401525af1801561027d57610253578380f35b6001600160401b03831161026a5750523880808380f35b634e487b7160e01b845260419052602483fd5b82513d86823e3d90fd5b505050fd5b5050fd5b8382346101ce57816003193601126101ce57905490516001600160a01b039091168152602090f35b8382346101ce57816003193601126101ce5760015490516001600160a01b039091168152602090f35b849084346100ec5760203660031901126100ec573563ffffffff60e01b81168091036100ec5760209250630271189760e51b8114908115610324575b5015158152f35b6301ffc9a760e01b1490508361031d565b600435906001600160a01b03821682036100e757565b602435906001600160a01b03821682036100e757565b90601f801991011681019081106001600160401b0382111761038257604052565b634e487b7160e01b600052604160045260246000fd5b81601f820112156100e7578035916020916001600160401b038411610382578360051b90604051946103cc85840187610361565b855283808601928201019283116100e7578301905b8282106103ef575050505090565b813581529083019083016103e1565b81601f820112156100e7578035906001600160401b0382116103825760405192610432601f8401601f191660200185610361565b828452602083830101116100e757816000926020809301838601378301015290565b1561045b57565b60405162461bcd60e51b815260206004820152602560248201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60448201526431ba34b7b760d91b6064820152608490fdfea2646970667358221220bdd10e5ba3340a9f250d7b2fced256986b9aae1a6f6a1db2035fe3a61a77cb7a64736f6c6343000815003360803461008b57601f6103d738819003918201601f19168301916001600160401b0383118484101761009057808492604094855283398101031261008b576020610048826100a6565b916001600160a01b0391829161005e91016100a6565b169160018060a01b0319928360005416176000551690600154161760015560405161031c90816100bb8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361008b5756fe608060408181526004918236101561001657600080fd5b600092833560e01c918263150b7a021461020d57508382636215be7714610172575081636aa00371146101495781637326afe0146100885750638da5cb5b1461005e57600080fd5b34610084578160031936011261008457905490516001600160a01b039091168152602090f35b5080fd5b905082346101465782600319360112610146576100a36102cb565b50546001600160a01b031633036100f6576020606492519162461bcd60e51b8352820152602060248201527f4f6e6c792076616c696461746f72732063616e20756e6c6f636b20746f6b656e6044820152fd5b6020608492519162461bcd60e51b8352820152602560248201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60448201526431ba34b7b760d91b6064820152fd5b80fd5b50503461008457816003193601126100845760015490516001600160a01b039091168152602090f35b92915034610209576020366003190112610209576001546001600160a01b0316803b156102045783906064845180968193632142170760e11b83523387840152306024840152863560448401525af180156101fa576101cf578380f35b67ffffffffffffffff83116101e75750523880808380f35b634e487b7160e01b845260419052602483fd5b82513d86823e3d90fd5b505050fd5b5050fd5b939150346100845760803660031901126100845780356001600160a01b038116036100845761023a6102cb565b5060643567ffffffffffffffff8082116102c757366023830112156102c75781830135928184116102b457601f8401601f19908116603f01168701918211878310176102b45750845281855236602483830101116102b057906020948160248794018483013701015251630a85bd0160e11b8152f35b8280fd5b634e487b7160e01b855260419052602484fd5b8380fd5b602435906001600160a01b03821682036102e157565b600080fdfea2646970667358221220350594167fbc70462b6324599d1f1e51d8c33a9d50f56a7f55014b6db748256664736f6c63430008150033a2646970667358221220cfcec26681c7115f106f5fbf2ac98c468e827e0db88bd87f90fa07085b1d2aa064736f6c63430008150033";

type NFTStorageDeployerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTStorageDeployerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTStorageDeployer__factory extends ContractFactory {
  constructor(...args: NFTStorageDeployerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NFTStorageDeployer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NFTStorageDeployer__factory {
    return super.connect(runner) as NFTStorageDeployer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTStorageDeployerInterface {
    return new Interface(_abi) as NFTStorageDeployerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NFTStorageDeployer {
    return new Contract(address, _abi, runner) as unknown as NFTStorageDeployer;
  }
}
