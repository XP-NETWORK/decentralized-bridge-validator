/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  NFTStorageERC1155,
  NFTStorageERC1155Interface,
} from "../../contracts/NFTStorageERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_collectionAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "collectionAddress",
    outputs: [
      {
        internalType: "contract IERC1155",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "unlockToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461008b57601f61059f38819003918201601f19168301916001600160401b0383118484101761009057808492604094855283398101031261008b576020610048826100a6565b916001600160a01b0391829161005e91016100a6565b169160018060a01b031992836000541617600055169060015416176001556040516104e490816100bb8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361008b5756fe608060408181526004908136101561001657600080fd5b600092833560e01c90816301ffc9a7146102e1575080636aa00371146102b85780638da5cb5b14610290578381639d2d04d1146101d257508063bc197c8114610148578063f23a6e61146100f05763fead48171461007357600080fd5b346100ec5760603660031901126100ec576001600160a01b0390604435828116036100e7576100aa60209260649554163314610454565b5162461bcd60e51b815291820152602060248201527f4f6e6c792076616c696461746f72732063616e20756e6c6f636b20746f6b656e6044820152fd5b600080fd5b8280fd5b5082346101455760a03660031901126101455761010b610335565b5061011461034b565b50608435906001600160401b0382116101455750602092610137913691016103fe565b505163f23a6e6160e01b8152f35b80fd5b5082346101455760a036600319011261014557610163610335565b5061016c61034b565b506001600160401b03906044358281116101ce5761018d9036908601610398565b506064358281116101ce576101a59036908601610398565b5060843591821161014557506020926101c0913691016103fe565b505163bc197c8160e01b8152f35b5080fd5b9290503461028c578160031936011261028c5782546001600160a01b03906101fd9082163314610454565b60015416803b1561028757839060c4845180968193637921219560e11b8352338784015230602484015286356044840152602435606484015260a060848401528160a48401525af1801561027d57610253578380f35b6001600160401b03831161026a5750523880808380f35b634e487b7160e01b845260419052602483fd5b82513d86823e3d90fd5b505050fd5b5050fd5b8382346101ce57816003193601126101ce57905490516001600160a01b039091168152602090f35b8382346101ce57816003193601126101ce5760015490516001600160a01b039091168152602090f35b849084346100ec5760203660031901126100ec573563ffffffff60e01b81168091036100ec5760209250630271189760e51b8114908115610324575b5015158152f35b6301ffc9a760e01b1490508361031d565b600435906001600160a01b03821682036100e757565b602435906001600160a01b03821682036100e757565b90601f801991011681019081106001600160401b0382111761038257604052565b634e487b7160e01b600052604160045260246000fd5b81601f820112156100e7578035916020916001600160401b038411610382578360051b90604051946103cc85840187610361565b855283808601928201019283116100e7578301905b8282106103ef575050505090565b813581529083019083016103e1565b81601f820112156100e7578035906001600160401b0382116103825760405192610432601f8401601f191660200185610361565b828452602083830101116100e757816000926020809301838601378301015290565b1561045b57565b60405162461bcd60e51b815260206004820152602560248201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60448201526431ba34b7b760d91b6064820152608490fdfea2646970667358221220bdd10e5ba3340a9f250d7b2fced256986b9aae1a6f6a1db2035fe3a61a77cb7a64736f6c63430008150033";

type NFTStorageERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTStorageERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTStorageERC1155__factory extends ContractFactory {
  constructor(...args: NFTStorageERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _collectionAddress: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _collectionAddress,
      _owner,
      overrides || {}
    );
  }
  override deploy(
    _collectionAddress: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_collectionAddress, _owner, overrides || {}) as Promise<
      NFTStorageERC1155 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NFTStorageERC1155__factory {
    return super.connect(runner) as NFTStorageERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTStorageERC1155Interface {
    return new Interface(_abi) as NFTStorageERC1155Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NFTStorageERC1155 {
    return new Contract(address, _abi, runner) as unknown as NFTStorageERC1155;
  }
}
